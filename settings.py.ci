"""
Django settings for training_platform project.

Generated by 'django-admin startproject' using Django 2.1.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os


def str2bool(v):
    if v is None or v == '':
        return False
    if v.lower() in ('yes', 'true', 'on', 't', 'y', '1'):
        return True
    elif v.lower() in ('no', 'false', 'off', 'f', 'n', '0'):
        return False
    else:
        raise False


DISTRIBUTED = str2bool(os.getenv('DISTRIBUTED', 'false'))

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'i%)9x-p*d4-zh&+ku#ob_e1e_da+3**h^bakxmfbw!^1@q8t!)'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['127.0.0.1', 'server']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'gunicorn',
    'django_dramatiq',

    'account',
    'management',
    'problems',
    'lessons',
    'virtual_machine',
    'vuldb'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'training_platform.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

DRAMATIQ_BROKER = {
    "BROKER": "dramatiq.brokers.redis.RedisBroker",
    "OPTIONS": {
        "url": "redis://tp_redis:6379/0",
    },
    "MIDDLEWARE": [
        # "dramatiq.middleware.Prometheus",
        "dramatiq.middleware.AgeLimit",
        "dramatiq.middleware.TimeLimit",
        "dramatiq.middleware.Callbacks",
        "dramatiq.middleware.Retries",
        # "django_dramatiq.middleware.AdminMiddleware",
        "django_dramatiq.middleware.DbConnectionsMiddleware",
    ]
}

WSGI_APPLICATION = 'training_platform.wsgi.application'

# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'trainingplatform',
        'USER': 'trainingplatform',
        'PASSWORD': 'trainingplatform',
        'HOST': 'tp_postgres',
        'PORT': '5432',
    }
}

# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATIC_URL = '/static/'

TEST_RUNNER = "utils.test.MyRunnerWithPartitionSupport"

AUTH_USER_MODEL = 'account.User'

REST_FRAMEWORK = {
    'DATETIME_FORMAT': '%s',
    'DATE_FORMAT': '%s',
    'TEST_REQUEST_DEFAULT_FORMAT': 'json',
    'DEFAULT_RENDERER_CLASSES': (
        'rest_framework.renderers.JSONRenderer',
    )
}

FILE_UPLOAD_MAX_MEMORY_SIZE = 20 * 1024 * 1024

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'standard': {
            'format': '[%(asctime)s] - [%(levelname)s] - [%(name)s:%(lineno)d]  - %(message)s',
            'datefmt': '%Y-%m-%d %H:%M:%S'
        }
    },
    'handlers': {
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'standard'
        },
        'file': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': './console.log',
            'formatter': 'standard',
        }
    },
    'loggers': {
        'django.request': {
            'handlers': ['console', 'file'],
            'level': 'ERROR',
            'propagate': True,
        },
        'django.db.backends': {
            'handlers': ['console', 'file'],
            'level': 'ERROR',
            'propagate': True,
        },
        'api.request': {
            'handlers': ['console', 'file'],
            'level': 'ERROR',
            'propagate': True,
        },
        'apscheduler': {
            'handlers': ['console', 'file'],
            'level': 'ERROR',
            'propagate': False,
        },
        'dramatiq': {
            'handlers': ['console', 'file'],
            'level': 'ERROR',
            'propagate': False,
        },
        'api.views': {
            'handlers': ['console'],
            'level': 'ERROR',
            'propagate': False,
        },
        '': {
            'handlers': ['console', 'file'],
            'level': 'WARNING',
            'propagate': True,
        }
    },
}

DEFAULT_RESOURCES_DIR = os.path.abspath(os.path.join(BASE_DIR, "../dev/resources"))
RESOURCES_DIR = os.environ.get("MANAGEMENT_RESOURCES_DIR", DEFAULT_RESOURCES_DIR)

DOWNLOAD_DIR = os.path.join(RESOURCES_DIR, "download")

IMAGE_DIR = os.path.join(RESOURCES_DIR, "image")

VIDEO_DIR = os.path.join(RESOURCES_DIR, 'video')
PDF_DIR = os.path.join(RESOURCES_DIR, 'pdf')

RICH_EDITOR_DIR = os.path.join(RESOURCES_DIR, 'rich_editor')
EDITOR_IMAGE_DIR = os.path.join(RICH_EDITOR_DIR, 'image')
EDITOR_HTML_DIR = os.path.join(RICH_EDITOR_DIR, 'html')

LICENSE_PUBLIC_KEY = """-----BEGIN PUBLIC KEY-----
MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAtb4vi6gIlF399LMQ7+tm
TRpkfaGGQr/aDcp5NzebGaq2leRt4BQnwx06c9+lr7G0LXVqYWjxhrzoRG3lB6sf
2NnrEhV/tuW14SaVrCq8saoS6eosCl9IDw0qu+rP92e1FCmPp0zMd29WqIRSvs6q
wQGgj0Z/j3CqzRdQlY8Ujw6GeAUVL7l1EGtuPZVgbdtnIC2yUZNoxw9Bh3akV8Ql
6KVbjInoer5KTMCxRGagHa0htE911KQL62wz7HjOPdLIZwc7woIUjl5JQNk7Yrjg
kHd2iIhxMsLWjh1kw7dRD9Lc3/qXikRZo/clONmGK6SoNfrywMTRn4TEQtrNjTxu
PQIDAQAB
-----END PUBLIC KEY-----"""

LICENSE_AES_KEY = b"A" * 16

VM_IMAGE_DIR = os.path.join(RESOURCES_DIR, 'vm_image')

VM_VMDK_IMAGE_DIR = os.path.join(VM_IMAGE_DIR, 'vmdk')

VM_QCOW2_IMAGE_DIR = os.path.join(VM_IMAGE_DIR, 'qcow2')

DOCKER_IMAGE_DIR = os.path.join(VM_IMAGE_DIR, 'docker')

VM_BACKING_FILE_DIR = os.path.join(VM_IMAGE_DIR, 'backing_file')

CHECK_SCRIPT_DIR = os.path.join(RESOURCES_DIR, 'check_script')

if DISTRIBUTED is False:
    VM_MANAGER_RPC_PATH = "vm_manager:2050"

    NET_MANAGER_RPC_PATH = 'vm_net_manager:1609'

    VPN_RPC_PATH = 'vm_net_manager:7986'

    SAND_BOX_RPC_PATH = 'vm_net_manager:1604'
else:
    VM_MANAGER_RPC_PORT = "2050"

    NET_MANAGER_RPC_PORT = '1609'

    VPN_RPC_PORT = '7986'

    SAND_BOX_RPC_PORT = '1604'

DOCKER_MANAGER_RPC_PATH = 'docker_manager:1617'

VM_SUB_NET = '10.0.0.0'

VM_SUBNET_MASK = '255.255.255.0'

IMPORT_FILE_PATH = os.path.join(RESOURCES_DIR, 'import')
IMPORT_TEMP_FILE_PATH = os.path.join(RESOURCES_DIR, 'import', 'platform_data')

VPN_CLIENT_CONF_DIR = os.path.join(RESOURCES_DIR, 'vpn_client_config')

TOOL_DIR = os.path.join(RESOURCES_DIR, 'tools')
